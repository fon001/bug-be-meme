apiVersion: apps/v1
kind: Deployment
metadata:
  # deployment name
  name: bp-deployment
  labels:
    app: bp

spec:
  # modify replicas according to your case
  replicas: 1
  selector:
    matchLabels:
      app: bp 

    
  # pod template
  template:
    metadata:
      labels:
        app: bp

  spec:
      strategy:
      # We do daily rollouts, limit the revision history to two weeks of num releases 
      # as we don't expect to roll back beyond that. 
      revisionHistoryLimit: 14       
      # deployment strategy
      strategy:    
        type: RollingUpdate
        rollingUpdate:      
          maxSurge: 1     
          maxUnavailable: 1    
      # the Deployment must wait for 60 seconds after seeing a Pod become healthy before moving on to updating the next Pod
      minReadySeconds: 60
      # sets the progress deadline to 10 minutes
      # If any particular stage in the rollout fails to progress in 10 minutes, then the Deployment is marked as failed, 
      # and all attempts to move the Deployment forward are halted
      # Not the overall length of the deployment! Anytime the deployment creates or deletes a Pod
      progressDeadlineSeconds: 600    

    spec:
      # pod contains 1 container
      containers:
      - name: bp
        image: fonacregistry.azurecr.io/bprestws:latest 
        resources:
          requests:  #request a Pod with  a minimum of 0.5 of a core and 128 MB of memory
            cpu: "500m"
            memory: "128Mi"
          limits:    #add a limit of 1.0 CPU and 512 MB of memory
            cpu: "1000m"   
            memory: "256Mi" 
        
        livenessProbe:
          httpGet:
            path: /healthy
            port: 8080
          initialDelaySeconds: 180
          timeoutSeconds: 5
          periodSeconds: 180
          failureThreshold: 3
          
        # container opens port 8080
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP            
---
apiVersion: v1
kind: Service
metadata:
  # The unique Service instance/name
  name: bp-service
spec:
  # Add external load balancer
  # *Only supported by some cloud providers*
  type: LoadBalancer
  ports:
    # Accept traffic sent to port 8080
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    # Loadbalance traffic across Pods matching
    # this label selector
    app: bp


  
