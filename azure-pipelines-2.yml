# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- None

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@3
  displayName: 'Create WAR file'
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false


- task: Docker@2
  displayName: 'Build and Push Image to ACR'
  inputs:
    containerRegistry: 'fonacregistry'
    #repository: 'bprestws'
    repository: '$(imageName):$(version)'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile-hollow'
    tags: 
    
- task: CmdLine@2
  displayName: 'Replace version number'
  inputs:
    script: 'sed -i ''s/bprestws-hollow:latest/$(hollowImage):$(version)/g'' Dockerfile-thinwar'


- task: Docker@2
  displayName: 'Build and Push Image to ACR'
  inputs:
    containerRegistry: 'fonacregistry'
    #repository: 'bprestws'
    repository: '$(imageName):$(version)'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile-thinwar'
    tags: 
    
- task: CmdLine@2
  displayName: 'Replace version number'
  inputs:
    script: 'sed -i ''s/bprestws-thinwar:latest/$(thinImage):$(version)/g''create-thin-service-manifest.yaml'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'create-thin-service-manifest.yaml'
    ArtifactName: 'YAML'
    publishLocation: 'Container'